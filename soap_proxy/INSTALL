------------------------------------------------------------------------
 $Id$

 This software is named soap_proxy, and is intended to be used together
 with EOxServer <http://eoxserver.org>.

 Copyright (C) 2011 ANF DATA spol. s r.o., Prague.
 Author: Milan Novacek

 This file is part of soap_proxy, available from the EOxServer repository
 <http://eoxserver.org>.

Soap_proxy is free software: you can redistribute it and/or modify
it under the EOxServer-SoapProxy Open License.
See the file LICENSE for the full license terms and conditions.

SOAP_PROXY IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

------------------------------------------------------------------------

###############################################
# Quick installation guide for the impatient: #
###############################################

0. Prerequisite: mapserver installed & configured.

1. Install and configure axis2/c.
   Download from
     http://ws.apache.org/axis2/c/download.cgi

   cd someplace
   mkdir axis2c
   setenv AXIS2C_HOME /path/to/someplace/axis2c

   # Follow the instructions in 'doc' to compile- but
   # use something like the following configure line to get the
   #  mod_axis2 configured for compiling at the same time:

   ./configure --with-apache2="/usr/include/apache2" \
     --with-apr="/usr/include/apr-1" --prefix=${AXIS2C_HOME}
   make
   make install

   Copy lib/libmod_axis2.so.0.6.0  to "<apache2 modules directory>" 
   as mod_axis2.so

   Edit the file '${AXIS2C_HOME}/axis2.xml' and ensure that the parameter
   enableMTOM has the value true.

   Check that the following dir exits, if not create it:
   ${AXIS2C_HOME}/services

   Configure mod_axis2 in the apache server config files - see the 
   corresponding section in the detailed instructions below.

   Restart the webserver and open the following page:
     http://127.0.0.1/sp_axis/services
   You should get a page that says "Deployed Services" and is otherwise blank.

2. Configure and Compile Soap Proxy:

   cd <...>/soap_proxy/service

   In 'soapProxy.wsdl' set '<soap:address location=.../>'.
   Copy TEMPLATE_services.xml to ``services.xml``.
   In 'service/services.xml' set 'BackendURL' to the address of eoxserver.

   cd ../src
    -->  in Makefile or in your environment set AXIS2C_HOME appropriately.
    make inst

   Check that 
     http://127.0.0.1/sp_axis/services
   shows the four operations (three WCS operations and GetMsVersion).

3. Optionally run tests described in testing/README.txt.

###############################################
# Installation guide:                         #
###############################################

Contents
=========
    0. Mapserver
    1. Download / {compile?} /  install axis2/c.
    2. Configure and Compile Soap Proxy
    3. Test the installation


0. Mapserver
============
A running mapserver with the wcs-1.1_post patch is a prerequisite for
running the service.


1. Download / {compile?} /  install axis2/c.
============================================

   http://ws.apache.org/axis2/c/download.cgi

On a 32-bit machine the binary distribution is probably ok, no
compilation required.

On a 64-bit machine you need to download the source and compile.
Note: if using a 32-bit httpd2 server, then the 32-bit binary distribution
should be ok - just make sure to use -m32 when compiling the o3s prototype
code.

Download the source dist.

It is recommended to create the required directories (below) as a regular
user (i.e. not root).
Make a directory to install to:
  cd someplace
  mkdir axis2c
  setenv AXIS2C_HOME <...>/someplace/axis2c

Follow the instructions in 'doc' to compile- but
use something like the following configure line to get the mod_axis2
configured for compiling at the same time:

./configure --with-apache2="/usr/include/apache2" \
   --with-apr="/usr/include/apr-1" --prefix=${AXIS2C_HOME}
make
make install

Copy lib/libmod_axis2.so.0.6.0  to "<apache2 modules directory>" 
as mod_axis2.so
The following are possible locations of "<apache2 modules directory>":
OpenSUSE: /lib64/apache2
CentOS:   /etc/httpd/modules

Edit the file '${AXIS2C_HOME}/axis2.xml' and ensure that the parameter
enableMTOM has the value true.

Check that the following dir exits, if not create it:
  ${AXIS2C_HOME}/services

Optional hello service:
-----------------------
  This step should not be required unless you are debugging the
  installation. You can install the 'hello' service from the distribution.
  See the downloaded axis2 documentation for details.


Configure mod_axis2 in the apache server config files.
------------------------------------------------------
NOTE:  set paths below as appropriate for your system. 
       In particular, Axis2RepoPath is AXIS2C_HOME from above.
Edit
 /etc/apache2/default-server.conf
    1. add:
        LoadModule axis2_module  /lib64/apache2/mod_axis2.so
        <IfModule mod_axis2.c>
          Axis2RepoPath /home/xxx/yyy/axis2c
          Axis2LogFile /zzz/yyy/ax2logs
          Axis2MaxLogFileSize 204800
          Axis2LogLevel debug
          <Location /sp_axis>
            SetHandler axis2_module
          </Location>
        </IfModule>


    2. If you are using BackendURL (see 'Configure the soapProxy service'
       below) to invoke mapserver: In the configuration file for apache httpd
       on the target system (this it the machine/address where the URL points
       to), add the following SetEnvIf directive to the block for
       <Directory "/srv/www/cgi-bin">:
         SetEnvIf MS_MAPFILE ^([/\w+-=~#\.]*) MS_MAPFILE=$1

       This only applies for executing mapserver. When the target system
       executues mapserver via its cgi interface, this directive is required to
       set the MS_MAPFILE environment variable to the mapfile location as
       configured by the 'MapFile' parameter in 'services.xml' on the source
       machine.
.

NOTE 2: In theory one should use <IfModule mod_axis2> .. </IfModule>

Also set a proxy for the service, in the same file:
    <IfModule mod_proxy.c>
       ProxyRequests Off
       ProxyPass         /sp_wcs http://127.0.0.1/sp_axis/services/soapProxy
     ...

First check the syntax of the config files:
    httpd2 -t
To restart it may suffice to send USR1 to the parent httpd process.

NOTE for SUSE linux:
  Instead of the LoadModule line, you can also edit the file 
   /etc/sysconfig/apache2 to add axis2 to APACHE_MODULES.

  In this case we cannot just send the USR1 signal to the httpd process,
  because the /etc/sysconfig/apache2 file is parsed into httpd conf files
  only by running /etc/init.d/apache2.  The restart procedure is then:
    httpd2 -t
    /etc/init.d/apache2 restart


Test the installation:
----------------------

  Open a browser to the page http://127.0.0.1/sp_axis/services.
You should get a page that says "Deployed Services".  Unless you
performed the optional installation of the 'hello' service, there should
not be any further details listed.


2. Configure and Compile Soap Proxy
====================================

 a. Configure the soapProxy service
 ----------------------------------

 cd service
  <edit> the file soapProxy.wsdl:
     At the bottom of the file, set '<soap:address location=.../>' 

  <edit> services.xml:
     Set correct paths for the parameters 'MapFile' and one of
       'MapServ' or 'BackendURL'.
     
     The parameters BackendURL, MapFile, and MapServ are used to configure
     soap_proxy.  They may be defined globally in ../../axis2.xml instead of
     here. MapFile and one of BackendURL or MapServ are required to be
     correctly configured.  If BackendURL is defined, then MapServ is ignored.
     This means if you wish to use MapServ you must delete or comment out the
     BackendURL parameter.
 

 b. Configure the development environment, compile and install
 -------------------------------------------------------------

 cd src
 <edit> Makefile:
    set AXIS2C_HOME appropriately

 make inst


If all went well this should install everything for the soapProxy service in
  ${AXIS2C_HOME}/services


3. Test the installation
========================

 a. Check the Service is up and running
 --------------------------------------
  Open a browser to the page http://127.0.0.1/sp_axis/services.
You should get the page with "Deployed Services", and soapProxy listed
as providing the four operations (three WCS operations and GetMsVersion).

See if you can access the wsdl for the service via a browser:
Open the page http://127.0.0.1/sp_eowcs?wsdl


 b. Testing with SOAPUI
 ----------------------

See test/README.txt for testing instructions.
